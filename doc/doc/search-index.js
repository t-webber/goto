var searchIndex = new Map(JSON.parse('[\
["goto",{"doc":"Main module: <code>goto</code> is a command line tool to navigate …","t":"FHOONNHQNCOHNHCCOONHNNNQFFHNNNNONHNNNHNNNOOOOOHHHOHHNNNNNNPPGPPPPPKNNNNNMNNNHH","n":["GlobalData","advance_by","aliass","argcs","borrow","borrow_mut","code","dbg_print","default","dirs","dirs","find_path","from","get_args","global","hist","hist","incr","into","main","try_from","try_into","type_id","user_error","DirsLine","SearchState","add","borrow","borrow","borrow_mut","borrow_mut","correct","default","edit","fmt","from","from","get","into","into","join","max_priory","path","prioritised","priory","priory2","read","read_dline","remove","shortcs","state","std_path","try_from","try_from","try_into","try_into","type_id","type_id","Add","Clear","Cmd","Decrement","Get","Reset","Rm","State","ToCmd","borrow","borrow_mut","fmt","from","into","to_cmd","try_from","try_into","type_id","popd","pushd"],"q":[[0,"goto"],[24,"goto::dirs"],[58,"goto::global"],[76,"goto::hist"],[78,"alloc::string"],[79,"core::iter::traits::iterator"],[80,"core::option"],[81,"std::collections::hash::map"],[82,"alloc::vec"],[83,"core::result"],[84,"core::any"],[85,"core::fmt"],[86,"core::fmt"]],"d":["Structure to contain all the static data of the program","Advance the iterator by <code>n</code> steps.","","Gives the number of arguments for each supported command …","","","Open the directory in Visual Studio Code.","Macro to print debug information, only if the feature …","","This module contains the functions to push and pop …","Path to the file containing the directories","Find the path of the directory to go to.","Returns the argument unchanged.","Get the arguments of the command.","This module contains all the static functions avalaible in …","This module contains the functions to read and write the …","Path to the file containing the history for popd/pushd","When a folder is used, <code>incr</code> is used to increment the usage …","Calls <code>U::from(self)</code>.","","","","","Macro to print user error.","Structure to contain the data of a line in the directory …","Structure to contain the state of the search","Function to add a shortcut to a line of the directory file","","","","","If a path was found for the given shortcut, <code>correct</code> …","","Arguments","","Returns the argument unchanged.","Returns the argument unchanged.","Function to get the path of a directory from the directory …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Function to convert a <code>DirsLine</code> to a string","The highest priority found.","The path of the directory","If a path was not found for the given shortcut, <code>prioritised</code>…","The priority of the directory","The priority of the directory incremented by <code>incr</code> (see …","Function to read the directory file","Function to read a line of the directory file","Function to remove a shortcut from a line of the directory …","The shortcuts of the directory","Function to print state of the directories","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Pop a directory from the history file.","Push a directory to the history file."],"i":[0,0,7,7,7,7,0,0,7,0,7,0,7,0,0,0,7,7,7,0,7,7,7,0,0,0,0,18,19,18,19,19,19,0,19,18,19,0,18,19,18,19,18,19,18,18,0,0,0,18,0,0,18,19,18,19,18,19,12,12,0,12,12,12,12,12,0,12,12,12,12,12,22,12,12,12,0,0],"f":"`{{cb}d{{j{}{{f{h}}}}}}``{ce{}{}}0{{{l{h}}h}d}`{{}n}``{{A`A`{l{h}}Ab}{{Ad{h}}}}{cc{}}{{{Af{A`b}}{Af{A`A`}}}{{An{{Aj{Ah}}{Aj{h}}Al}}}}````5{{}d}{c{{B`{e}}}{}{}}0{cBb{}}```{{BdAlA`A`}h}9999`{{}Bf}1{{BfBh}Bj}77{{BdAlBfA`}h}<<{{BdA`}h}`````{{A`{l{h}}Ab}{{Ad{h}}}}{{A`{l{h}}AlAbBf}h}{{BdAlA`}h}`{A`{{Ad{h}}}}{{{Ad{h}}}h};;;;::`````````{ce{}{}}0{{AhBh}Bj}{cc{}}2{BlAh}??>{A`h}{{A`A`}d}","c":[],"p":[[1,"usize"],[1,"unit"],[17,"Item"],[5,"String",78],[10,"Iterator",79],[1,"slice"],[5,"GlobalData",0],[1,"str"],[1,"u32"],[6,"Option",80],[5,"HashMap",81],[6,"Cmd",58],[5,"Vec",82],[1,"bool"],[1,"tuple"],[6,"Result",83],[5,"TypeId",84],[5,"DirsLine",24],[5,"SearchState",24],[5,"Formatter",85],[8,"Result",85],[10,"ToCmd",58]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
